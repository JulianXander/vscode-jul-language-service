{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.jul",
  "fileTypes": [
    ".jul"
  ],
  "patterns": [
    {
      "include": "#expression"
    }
  ],
  "repository": {
    "expression": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "-?[0-9]+(\\.[0-9]+)?"
        },
        {
          "name": "string.jul",
          "begin": "§",
          "beginCaptures": {
            "0": {
              "name": "constant.character.escape.jul"
            }
          },
          "end": "(§)(?![(§#])",
          "endCaptures": {
            "1": {
              "name": "constant.character.escape.jul"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.jul",
              "match": "§#"
            },
            {
              "include": "#comment"
            },
            {
              "name": "constant.character.escape.jul",
              "match": "§§"
            },
            {
              "name": "string.interpolation.jul",
              "begin": "§\\(",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.template-expression.begin"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.template-expression.end"
                }
              },
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            }
          ]
        },
        {
          "name": "keyword.operator.expression.branching.jul",
          "match": "\\?"
        },
        {
          "name": "keyword.operator.expression.function.jul",
          "match": "=>"
        },
        {
          "name": "function-call.jul",
          "begin": "([a-zA-Z][0-9a-zA-Z]*\\$?)\\(",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "name": "entity.object.jul",
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "name": "support.type.jul",
          "match": "[A-Z][0-9a-zA-Z]*"
        },
        {
          "name": "variable.jul",
          "match": "[a-zA-Z][0-9a-zA-Z]*\\$"
        },
        {
          "name": "entity.name.type.jul",
          "match": "[A-Z][0-9a-zA-Z]*\\$"
        },
        {
          "name": "variable.other.constant.jul",
          "match": "[a-z][0-9a-zA-Z]*"
        },
        {
          "include": "#comment"
        },
        {
          "name": "definition.jul",
          "match": "="
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "name": "punctuation.definition.tag.jul",
          "begin": "#(end)?region",
          "end": "\\n"
        },
        {
          "name": "invalid.jul",
          "begin": "# ?[tT][oO][dD][oO]",
          "end": "\\n"
        },
        {
          "name": "comment.jul",
          "begin": "#",
          "end": "\\n"
        }
      ]
    }
  }
}
